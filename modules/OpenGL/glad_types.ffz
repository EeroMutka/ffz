// This file was generated by library_translator.

#GLenum: u32

#GLboolean: bool

#GLbitfield: u32

#GLvoid: raw

#GLbyte: s8

#GLubyte: u8

#GLshort: s16

#GLushort: u16

#GLint: s32

#GLuint: u32

#GLclampx: s32

#GLsizei: s32

#GLfloat: f32

#GLclampf: f32

#GLdouble: f64

#GLclampd: f64

#GLeglClientBufferEXT: ^raw

#GLeglImageOES: ^raw

#GLchar: u8

#GLcharARB: u8

#GLhandleARB: u32

#GLhalf: u16

#GLhalfARB: u16

#GLfixed: s32

#GLintptr: s64

#GLintptrARB: s64

#GLsizeiptr: s64

#GLsizeiptrARB: s64

#GLint64: s64

#GLint64EXT: s64

#GLuint64: u64

#GLuint64EXT: u64

#GLsync: ^raw

#GLDEBUGPROC: proc(source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, message: ^GLchar, userParam: ^raw)

#GLDEBUGPROCARB: proc(source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, message: ^GLchar, userParam: ^raw)

#GLDEBUGPROCKHR: proc(source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, message: ^GLchar, userParam: ^raw)

#GLDEBUGPROCAMD: proc(id: GLuint, category: GLenum, severity: GLenum, length: GLsizei, message: ^GLchar, userParam: ^raw)

#GLhalfNV: u16

#GLvdpauSurfaceNV: s64

#GLVULKANPROCNV: proc

#PFNGLCULLFACEPROC: proc(mode: GLenum)

#PFNGLFRONTFACEPROC: proc(mode: GLenum)

#PFNGLHINTPROC: proc(target: GLenum, mode: GLenum)

#PFNGLLINEWIDTHPROC: proc(width: GLfloat)

#PFNGLPOINTSIZEPROC: proc(width: GLfloat)

#PFNGLPOLYGONMODEPROC: proc(target: GLenum, mode: GLenum)

#PFNGLSCISSORPROC: proc(x: GLint, y: GLint, width: GLsizei, height: GLsizei)

#PFNGLTEXPARAMETERFPROC: proc(target: GLenum, pname: GLenum, param: GLfloat)

#PFNGLTEXPARAMETERFVPROC: proc(target: GLenum, pname: GLenum, params: ^GLfloat)

#PFNGLTEXPARAMETERIPROC: proc(target: GLenum, pname: GLenum, param: GLint)

#PFNGLTEXPARAMETERIVPROC: proc(target: GLenum, pname: GLenum, params: ^GLint)

#PFNGLTEXIMAGE1DPROC: proc(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ^raw)

#PFNGLTEXIMAGE2DPROC: proc(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ^raw)

#PFNGLDRAWBUFFERPROC: proc(mode: GLenum)

#PFNGLCLEARPROC: proc(mask: GLbitfield)

#PFNGLCLEARCOLORPROC: proc(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat)

#PFNGLCLEARSTENCILPROC: proc(s: GLint)

#PFNGLCLEARDEPTHPROC: proc(depth: GLdouble)

#PFNGLSTENCILMASKPROC: proc(mask: GLuint)

#PFNGLCOLORMASKPROC: proc(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean)

#PFNGLDEPTHMASKPROC: proc(flag: GLboolean)

#PFNGLDISABLEPROC: proc(mode: GLenum)

#PFNGLENABLEPROC: proc(mode: GLenum)

#PFNGLFINISHPROC: proc

#PFNGLFLUSHPROC: proc

#PFNGLBLENDFUNCPROC: proc(target: GLenum, mode: GLenum)

#PFNGLLOGICOPPROC: proc(mode: GLenum)

#PFNGLSTENCILFUNCPROC: proc(func: GLenum, ref: GLint, mask: GLuint)

#PFNGLSTENCILOPPROC: proc(fail: GLenum, zfail: GLenum, zpass: GLenum)

#PFNGLDEPTHFUNCPROC: proc(mode: GLenum)

#PFNGLPIXELSTOREFPROC: proc(pname: GLenum, param: GLfloat)

#PFNGLPIXELSTOREIPROC: proc(pname: GLenum, param: GLint)

#PFNGLREADBUFFERPROC: proc(mode: GLenum)

#PFNGLREADPIXELSPROC: proc(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ^raw)

#PFNGLGETBOOLEANVPROC: proc(pname: GLenum, data: ^GLboolean)

#PFNGLGETDOUBLEVPROC: proc(pname: GLenum, data: ^GLdouble)

#PFNGLGETERRORPROC: proc => GLenum

#PFNGLGETFLOATVPROC: proc(pname: GLenum, data: ^GLfloat)

#PFNGLGETINTEGERVPROC: proc(pname: GLenum, data: ^GLint)

#PFNGLGETSTRINGPROC: proc(name: GLenum) => ^GLubyte

#PFNGLGETTEXIMAGEPROC: proc(target: GLenum, level: GLint, format: GLenum, type: GLenum, pixels: ^raw)

#PFNGLGETTEXPARAMETERFVPROC: proc(target: GLenum, pname: GLenum, params: ^GLfloat)

#PFNGLGETTEXPARAMETERIVPROC: proc(target: GLenum, pname: GLenum, params: ^GLint)

#PFNGLGETTEXLEVELPARAMETERFVPROC: proc(target: GLenum, level: GLint, pname: GLenum, params: ^GLfloat)

#PFNGLGETTEXLEVELPARAMETERIVPROC: proc(target: GLenum, level: GLint, pname: GLenum, params: ^GLint)

#PFNGLISENABLEDPROC: proc(cap: GLenum) => GLboolean

#PFNGLDEPTHRANGEPROC: proc(n: GLdouble, f: GLdouble)

#PFNGLVIEWPORTPROC: proc(x: GLint, y: GLint, width: GLsizei, height: GLsizei)

#PFNGLDRAWARRAYSPROC: proc(mode: GLenum, first: GLint, count: GLsizei)

#PFNGLDRAWELEMENTSPROC: proc(mode: GLenum, count: GLsizei, type: GLenum, indices: ^raw)

#PFNGLPOLYGONOFFSETPROC: proc(factor: GLfloat, units: GLfloat)

#PFNGLCOPYTEXIMAGE1DPROC: proc(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint)

#PFNGLCOPYTEXIMAGE2DPROC: proc(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint)

#PFNGLCOPYTEXSUBIMAGE1DPROC: proc(target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei)

#PFNGLCOPYTEXSUBIMAGE2DPROC: proc(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)

#PFNGLTEXSUBIMAGE1DPROC: proc(target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: ^raw)

#PFNGLTEXSUBIMAGE2DPROC: proc(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ^raw)

#PFNGLBINDTEXTUREPROC: proc(target: GLenum, texture: GLuint)

#PFNGLDELETETEXTURESPROC: proc(n: GLsizei, textures: ^GLuint)

#PFNGLGENTEXTURESPROC: proc(n: GLsizei, textures: ^GLuint)

#PFNGLISTEXTUREPROC: proc(texture: GLuint) => GLboolean

#PFNGLDRAWRANGEELEMENTSPROC: proc(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: ^raw)

#PFNGLTEXIMAGE3DPROC: proc(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ^raw)

#PFNGLTEXSUBIMAGE3DPROC: proc(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: ^raw)

#PFNGLCOPYTEXSUBIMAGE3DPROC: proc(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)

#PFNGLACTIVETEXTUREPROC: proc(mode: GLenum)

#PFNGLSAMPLECOVERAGEPROC: proc(value: GLfloat, invert: GLboolean)

#PFNGLCOMPRESSEDTEXIMAGE3DPROC: proc(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: ^raw)

#PFNGLCOMPRESSEDTEXIMAGE2DPROC: proc(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: ^raw)

#PFNGLCOMPRESSEDTEXIMAGE1DPROC: proc(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: ^raw)

#PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC: proc(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: ^raw)

#PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC: proc(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: ^raw)

#PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC: proc(target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: ^raw)

#PFNGLGETCOMPRESSEDTEXIMAGEPROC: proc(target: GLenum, level: GLint, img: ^raw)

#PFNGLBLENDFUNCSEPARATEPROC: proc(sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum)

#PFNGLMULTIDRAWARRAYSPROC: proc(mode: GLenum, first: ^GLint, count: ^GLsizei, drawcount: GLsizei)

#PFNGLMULTIDRAWELEMENTSPROC: proc(mode: GLenum, count: ^GLsizei, type: GLenum, indices: ^^raw, drawcount: GLsizei)

#PFNGLPOINTPARAMETERFPROC: proc(pname: GLenum, param: GLfloat)

#PFNGLPOINTPARAMETERFVPROC: proc(pname: GLenum, params: ^GLfloat)

#PFNGLPOINTPARAMETERIPROC: proc(pname: GLenum, param: GLint)

#PFNGLPOINTPARAMETERIVPROC: proc(pname: GLenum, params: ^GLint)

#PFNGLBLENDCOLORPROC: proc(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat)

#PFNGLBLENDEQUATIONPROC: proc(mode: GLenum)

#PFNGLGENQUERIESPROC: proc(n: GLsizei, textures: ^GLuint)

#PFNGLDELETEQUERIESPROC: proc(n: GLsizei, textures: ^GLuint)

#PFNGLISQUERYPROC: proc(texture: GLuint) => GLboolean

#PFNGLBEGINQUERYPROC: proc(target: GLenum, texture: GLuint)

#PFNGLENDQUERYPROC: proc(mode: GLenum)

#PFNGLGETQUERYIVPROC: proc(target: GLenum, pname: GLenum, params: ^GLint)

#PFNGLGETQUERYOBJECTIVPROC: proc(id: GLuint, pname: GLenum, params: ^GLint)

#PFNGLGETQUERYOBJECTUIVPROC: proc(id: GLuint, pname: GLenum, params: ^GLuint)

#PFNGLBINDBUFFERPROC: proc(target: GLenum, texture: GLuint)

#PFNGLDELETEBUFFERSPROC: proc(n: GLsizei, textures: ^GLuint)

#PFNGLGENBUFFERSPROC: proc(n: GLsizei, textures: ^GLuint)

#PFNGLISBUFFERPROC: proc(texture: GLuint) => GLboolean

#PFNGLBUFFERDATAPROC: proc(target: GLenum, size: GLsizeiptr, data: ^raw, usage: GLenum)

#PFNGLBUFFERSUBDATAPROC: proc(target: GLenum, offset: GLintptr, size: GLsizeiptr, data: ^raw)

#PFNGLGETBUFFERSUBDATAPROC: proc(target: GLenum, offset: GLintptr, size: GLsizeiptr, data: ^raw)

#PFNGLMAPBUFFERPROC: proc(target: GLenum, access: GLenum) => ^raw

#PFNGLUNMAPBUFFERPROC: proc(cap: GLenum) => GLboolean

#PFNGLGETBUFFERPARAMETERIVPROC: proc(target: GLenum, pname: GLenum, params: ^GLint)

#PFNGLGETBUFFERPOINTERVPROC: proc(target: GLenum, pname: GLenum, params: ^^raw)

#PFNGLBLENDEQUATIONSEPARATEPROC: proc(target: GLenum, mode: GLenum)

#PFNGLDRAWBUFFERSPROC: proc(n: GLsizei, bufs: ^GLenum)

#PFNGLSTENCILOPSEPARATEPROC: proc(sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum)

#PFNGLSTENCILFUNCSEPARATEPROC: proc(face: GLenum, func: GLenum, ref: GLint, mask: GLuint)

#PFNGLSTENCILMASKSEPARATEPROC: proc(target: GLenum, texture: GLuint)

#PFNGLATTACHSHADERPROC: proc(program: GLuint, shader: GLuint)

#PFNGLBINDATTRIBLOCATIONPROC: proc(program: GLuint, index: GLuint, name: ^GLchar)

#PFNGLCOMPILESHADERPROC: proc(mask: GLuint)

#PFNGLCREATEPROGRAMPROC: proc => GLuint

#PFNGLCREATESHADERPROC: proc(type: GLenum) => GLuint

#PFNGLDELETEPROGRAMPROC: proc(mask: GLuint)

#PFNGLDELETESHADERPROC: proc(mask: GLuint)

#PFNGLDETACHSHADERPROC: proc(program: GLuint, shader: GLuint)

#PFNGLDISABLEVERTEXATTRIBARRAYPROC: proc(mask: GLuint)

#PFNGLENABLEVERTEXATTRIBARRAYPROC: proc(mask: GLuint)

#PFNGLGETACTIVEATTRIBPROC: proc(program: GLuint, index: GLuint, bufSize: GLsizei, length: ^GLsizei, size: ^GLint, type: ^GLenum, name: ^GLchar)

#PFNGLGETACTIVEUNIFORMPROC: proc(program: GLuint, index: GLuint, bufSize: GLsizei, length: ^GLsizei, size: ^GLint, type: ^GLenum, name: ^GLchar)

#PFNGLGETATTACHEDSHADERSPROC: proc(program: GLuint, maxCount: GLsizei, count: ^GLsizei, shaders: ^GLuint)

#PFNGLGETATTRIBLOCATIONPROC: proc(program: GLuint, name: ^GLchar) => GLint

#PFNGLGETPROGRAMIVPROC: proc(id: GLuint, pname: GLenum, params: ^GLint)

#PFNGLGETPROGRAMINFOLOGPROC: proc(program: GLuint, bufSize: GLsizei, length: ^GLsizei, infoLog: ^GLchar)

#PFNGLGETSHADERIVPROC: proc(id: GLuint, pname: GLenum, params: ^GLint)

#PFNGLGETSHADERINFOLOGPROC: proc(program: GLuint, bufSize: GLsizei, length: ^GLsizei, infoLog: ^GLchar)

#PFNGLGETSHADERSOURCEPROC: proc(program: GLuint, bufSize: GLsizei, length: ^GLsizei, infoLog: ^GLchar)

#PFNGLGETUNIFORMLOCATIONPROC: proc(program: GLuint, name: ^GLchar) => GLint

#PFNGLGETUNIFORMFVPROC: proc(program: GLuint, location: GLint, params: ^GLfloat)

#PFNGLGETUNIFORMIVPROC: proc(program: GLuint, location: GLint, params: ^GLint)

#PFNGLGETVERTEXATTRIBDVPROC: proc(index: GLuint, pname: GLenum, params: ^GLdouble)

#PFNGLGETVERTEXATTRIBFVPROC: proc(index: GLuint, pname: GLenum, params: ^GLfloat)

#PFNGLGETVERTEXATTRIBIVPROC: proc(id: GLuint, pname: GLenum, params: ^GLint)

#PFNGLGETVERTEXATTRIBPOINTERVPROC: proc(index: GLuint, pname: GLenum, pointer: ^^raw)

#PFNGLISPROGRAMPROC: proc(texture: GLuint) => GLboolean

#PFNGLISSHADERPROC: proc(texture: GLuint) => GLboolean

#PFNGLLINKPROGRAMPROC: proc(mask: GLuint)

#PFNGLSHADERSOURCEPROC: proc(shader: GLuint, count: GLsizei, _string: ^^GLchar, length: ^GLint)

#PFNGLUSEPROGRAMPROC: proc(mask: GLuint)

#PFNGLUNIFORM1FPROC: proc(location: GLint, v0: GLfloat)

#PFNGLUNIFORM2FPROC: proc(location: GLint, v0: GLfloat, v1: GLfloat)

#PFNGLUNIFORM3FPROC: proc(location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat)

#PFNGLUNIFORM4FPROC: proc(location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat)

#PFNGLUNIFORM1IPROC: proc(location: GLint, v0: GLint)

#PFNGLUNIFORM2IPROC: proc(location: GLint, v0: GLint, v1: GLint)

#PFNGLUNIFORM3IPROC: proc(location: GLint, v0: GLint, v1: GLint, v2: GLint)

#PFNGLUNIFORM4IPROC: proc(location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint)

#PFNGLUNIFORM1FVPROC: proc(location: GLint, count: GLsizei, value: ^GLfloat)

#PFNGLUNIFORM2FVPROC: proc(location: GLint, count: GLsizei, value: ^GLfloat)

#PFNGLUNIFORM3FVPROC: proc(location: GLint, count: GLsizei, value: ^GLfloat)

#PFNGLUNIFORM4FVPROC: proc(location: GLint, count: GLsizei, value: ^GLfloat)

#PFNGLUNIFORM1IVPROC: proc(location: GLint, count: GLsizei, value: ^GLint)

#PFNGLUNIFORM2IVPROC: proc(location: GLint, count: GLsizei, value: ^GLint)

#PFNGLUNIFORM3IVPROC: proc(location: GLint, count: GLsizei, value: ^GLint)

#PFNGLUNIFORM4IVPROC: proc(location: GLint, count: GLsizei, value: ^GLint)

#PFNGLUNIFORMMATRIX2FVPROC: proc(location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)

#PFNGLUNIFORMMATRIX3FVPROC: proc(location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)

#PFNGLUNIFORMMATRIX4FVPROC: proc(location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)

#PFNGLVALIDATEPROGRAMPROC: proc(mask: GLuint)

#PFNGLVERTEXATTRIB1DPROC: proc(index: GLuint, x: GLdouble)

#PFNGLVERTEXATTRIB1DVPROC: proc(index: GLuint, v: ^GLdouble)

#PFNGLVERTEXATTRIB1FPROC: proc(index: GLuint, x: GLfloat)

#PFNGLVERTEXATTRIB1FVPROC: proc(index: GLuint, v: ^GLfloat)

#PFNGLVERTEXATTRIB1SPROC: proc(index: GLuint, x: GLshort)

#PFNGLVERTEXATTRIB1SVPROC: proc(index: GLuint, v: ^GLshort)

#PFNGLVERTEXATTRIB2DPROC: proc(index: GLuint, x: GLdouble, y: GLdouble)

#PFNGLVERTEXATTRIB2DVPROC: proc(index: GLuint, v: ^GLdouble)

#PFNGLVERTEXATTRIB2FPROC: proc(index: GLuint, x: GLfloat, y: GLfloat)

#PFNGLVERTEXATTRIB2FVPROC: proc(index: GLuint, v: ^GLfloat)

#PFNGLVERTEXATTRIB2SPROC: proc(index: GLuint, x: GLshort, y: GLshort)

#PFNGLVERTEXATTRIB2SVPROC: proc(index: GLuint, v: ^GLshort)

#PFNGLVERTEXATTRIB3DPROC: proc(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble)

#PFNGLVERTEXATTRIB3DVPROC: proc(index: GLuint, v: ^GLdouble)

#PFNGLVERTEXATTRIB3FPROC: proc(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat)

#PFNGLVERTEXATTRIB3FVPROC: proc(index: GLuint, v: ^GLfloat)

#PFNGLVERTEXATTRIB3SPROC: proc(index: GLuint, x: GLshort, y: GLshort, z: GLshort)

#PFNGLVERTEXATTRIB3SVPROC: proc(index: GLuint, v: ^GLshort)

#PFNGLVERTEXATTRIB4NBVPROC: proc(index: GLuint, v: ^GLbyte)

#PFNGLVERTEXATTRIB4NIVPROC: proc(index: GLuint, v: ^GLint)

#PFNGLVERTEXATTRIB4NSVPROC: proc(index: GLuint, v: ^GLshort)

#PFNGLVERTEXATTRIB4NUBPROC: proc(index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte)

#PFNGLVERTEXATTRIB4NUBVPROC: proc(index: GLuint, v: ^GLubyte)

#PFNGLVERTEXATTRIB4NUIVPROC: proc(index: GLuint, v: ^GLuint)

#PFNGLVERTEXATTRIB4NUSVPROC: proc(index: GLuint, v: ^GLushort)

#PFNGLVERTEXATTRIB4BVPROC: proc(index: GLuint, v: ^GLbyte)

#PFNGLVERTEXATTRIB4DPROC: proc(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)

#PFNGLVERTEXATTRIB4DVPROC: proc(index: GLuint, v: ^GLdouble)

#PFNGLVERTEXATTRIB4FPROC: proc(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)

#PFNGLVERTEXATTRIB4FVPROC: proc(index: GLuint, v: ^GLfloat)

#PFNGLVERTEXATTRIB4IVPROC: proc(index: GLuint, v: ^GLint)

#PFNGLVERTEXATTRIB4SPROC: proc(index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort)

#PFNGLVERTEXATTRIB4SVPROC: proc(index: GLuint, v: ^GLshort)

#PFNGLVERTEXATTRIB4UBVPROC: proc(index: GLuint, v: ^GLubyte)

#PFNGLVERTEXATTRIB4UIVPROC: proc(index: GLuint, v: ^GLuint)

#PFNGLVERTEXATTRIB4USVPROC: proc(index: GLuint, v: ^GLushort)

#PFNGLVERTEXATTRIBPOINTERPROC: proc(index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, pointer: ^raw)

#PFNGLUNIFORMMATRIX2X3FVPROC: proc(location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)

#PFNGLUNIFORMMATRIX3X2FVPROC: proc(location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)

#PFNGLUNIFORMMATRIX2X4FVPROC: proc(location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)

#PFNGLUNIFORMMATRIX4X2FVPROC: proc(location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)

#PFNGLUNIFORMMATRIX3X4FVPROC: proc(location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)

#PFNGLUNIFORMMATRIX4X3FVPROC: proc(location: GLint, count: GLsizei, transpose: GLboolean, value: ^GLfloat)

#PFNGLCOLORMASKIPROC: proc(index: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean)

#PFNGLGETBOOLEANI_VPROC: proc(target: GLenum, index: GLuint, data: ^GLboolean)

#PFNGLGETINTEGERI_VPROC: proc(target: GLenum, index: GLuint, data: ^GLint)

#PFNGLENABLEIPROC: proc(target: GLenum, texture: GLuint)

#PFNGLDISABLEIPROC: proc(target: GLenum, texture: GLuint)

#PFNGLISENABLEDIPROC: proc(target: GLenum, index: GLuint) => GLboolean

#PFNGLBEGINTRANSFORMFEEDBACKPROC: proc(mode: GLenum)

#PFNGLENDTRANSFORMFEEDBACKPROC: proc

#PFNGLBINDBUFFERRANGEPROC: proc(target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr)

#PFNGLBINDBUFFERBASEPROC: proc(target: GLenum, index: GLuint, buffer: GLuint)

#PFNGLTRANSFORMFEEDBACKVARYINGSPROC: proc(program: GLuint, count: GLsizei, varyings: ^^GLchar, bufferMode: GLenum)

#PFNGLGETTRANSFORMFEEDBACKVARYINGPROC: proc(program: GLuint, index: GLuint, bufSize: GLsizei, length: ^GLsizei, size: ^GLsizei, type: ^GLenum, name: ^GLchar)

#PFNGLCLAMPCOLORPROC: proc(target: GLenum, mode: GLenum)

#PFNGLBEGINCONDITIONALRENDERPROC: proc(id: GLuint, mode: GLenum)

#PFNGLENDCONDITIONALRENDERPROC: proc

#PFNGLVERTEXATTRIBIPOINTERPROC: proc(index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: ^raw)

#PFNGLGETVERTEXATTRIBIIVPROC: proc(id: GLuint, pname: GLenum, params: ^GLint)

#PFNGLGETVERTEXATTRIBIUIVPROC: proc(id: GLuint, pname: GLenum, params: ^GLuint)

#PFNGLVERTEXATTRIBI1IPROC: proc(index: GLuint, x: GLint)

#PFNGLVERTEXATTRIBI2IPROC: proc(index: GLuint, x: GLint, y: GLint)

#PFNGLVERTEXATTRIBI3IPROC: proc(index: GLuint, x: GLint, y: GLint, z: GLint)

#PFNGLVERTEXATTRIBI4IPROC: proc(index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint)

#PFNGLVERTEXATTRIBI1UIPROC: proc(program: GLuint, shader: GLuint)

#PFNGLVERTEXATTRIBI2UIPROC: proc(index: GLuint, x: GLuint, y: GLuint)

#PFNGLVERTEXATTRIBI3UIPROC: proc(index: GLuint, x: GLuint, y: GLuint, z: GLuint)

#PFNGLVERTEXATTRIBI4UIPROC: proc(index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint)

#PFNGLVERTEXATTRIBI1IVPROC: proc(index: GLuint, v: ^GLint)

#PFNGLVERTEXATTRIBI2IVPROC: proc(index: GLuint, v: ^GLint)

#PFNGLVERTEXATTRIBI3IVPROC: proc(index: GLuint, v: ^GLint)

#PFNGLVERTEXATTRIBI4IVPROC: proc(index: GLuint, v: ^GLint)

#PFNGLVERTEXATTRIBI1UIVPROC: proc(index: GLuint, v: ^GLuint)

#PFNGLVERTEXATTRIBI2UIVPROC: proc(index: GLuint, v: ^GLuint)

#PFNGLVERTEXATTRIBI3UIVPROC: proc(index: GLuint, v: ^GLuint)

#PFNGLVERTEXATTRIBI4UIVPROC: proc(index: GLuint, v: ^GLuint)

#PFNGLVERTEXATTRIBI4BVPROC: proc(index: GLuint, v: ^GLbyte)

#PFNGLVERTEXATTRIBI4SVPROC: proc(index: GLuint, v: ^GLshort)

#PFNGLVERTEXATTRIBI4UBVPROC: proc(index: GLuint, v: ^GLubyte)

#PFNGLVERTEXATTRIBI4USVPROC: proc(index: GLuint, v: ^GLushort)

#PFNGLGETUNIFORMUIVPROC: proc(program: GLuint, location: GLint, params: ^GLuint)

#PFNGLBINDFRAGDATALOCATIONPROC: proc(program: GLuint, index: GLuint, name: ^GLchar)

#PFNGLGETFRAGDATALOCATIONPROC: proc(program: GLuint, name: ^GLchar) => GLint

#PFNGLUNIFORM1UIPROC: proc(location: GLint, v0: GLuint)

#PFNGLUNIFORM2UIPROC: proc(location: GLint, v0: GLuint, v1: GLuint)

#PFNGLUNIFORM3UIPROC: proc(location: GLint, v0: GLuint, v1: GLuint, v2: GLuint)

#PFNGLUNIFORM4UIPROC: proc(location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint)

#PFNGLUNIFORM1UIVPROC: proc(location: GLint, count: GLsizei, value: ^GLuint)

#PFNGLUNIFORM2UIVPROC: proc(location: GLint, count: GLsizei, value: ^GLuint)

#PFNGLUNIFORM3UIVPROC: proc(location: GLint, count: GLsizei, value: ^GLuint)

#PFNGLUNIFORM4UIVPROC: proc(location: GLint, count: GLsizei, value: ^GLuint)

#PFNGLTEXPARAMETERIIVPROC: proc(target: GLenum, pname: GLenum, params: ^GLint)

#PFNGLTEXPARAMETERIUIVPROC: proc(target: GLenum, pname: GLenum, params: ^GLuint)

#PFNGLGETTEXPARAMETERIIVPROC: proc(target: GLenum, pname: GLenum, params: ^GLint)

#PFNGLGETTEXPARAMETERIUIVPROC: proc(target: GLenum, pname: GLenum, params: ^GLuint)

#PFNGLCLEARBUFFERIVPROC: proc(buffer: GLenum, drawbuffer: GLint, value: ^GLint)

#PFNGLCLEARBUFFERUIVPROC: proc(buffer: GLenum, drawbuffer: GLint, value: ^GLuint)

#PFNGLCLEARBUFFERFVPROC: proc(buffer: GLenum, drawbuffer: GLint, value: ^GLfloat)

#PFNGLCLEARBUFFERFIPROC: proc(buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint)

#PFNGLGETSTRINGIPROC: proc(name: GLenum, index: GLuint) => ^GLubyte

#PFNGLISRENDERBUFFERPROC: proc(texture: GLuint) => GLboolean

#PFNGLBINDRENDERBUFFERPROC: proc(target: GLenum, texture: GLuint)

#PFNGLDELETERENDERBUFFERSPROC: proc(n: GLsizei, textures: ^GLuint)

#PFNGLGENRENDERBUFFERSPROC: proc(n: GLsizei, textures: ^GLuint)

#PFNGLRENDERBUFFERSTORAGEPROC: proc(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei)

#PFNGLGETRENDERBUFFERPARAMETERIVPROC: proc(target: GLenum, pname: GLenum, params: ^GLint)

#PFNGLISFRAMEBUFFERPROC: proc(texture: GLuint) => GLboolean

#PFNGLBINDFRAMEBUFFERPROC: proc(target: GLenum, texture: GLuint)

#PFNGLDELETEFRAMEBUFFERSPROC: proc(n: GLsizei, textures: ^GLuint)

#PFNGLGENFRAMEBUFFERSPROC: proc(n: GLsizei, textures: ^GLuint)

#PFNGLCHECKFRAMEBUFFERSTATUSPROC: proc(target: GLenum) => GLenum

#PFNGLFRAMEBUFFERTEXTURE1DPROC: proc(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint)

#PFNGLFRAMEBUFFERTEXTURE2DPROC: proc(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint)

#PFNGLFRAMEBUFFERTEXTURE3DPROC: proc(target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint)

#PFNGLFRAMEBUFFERRENDERBUFFERPROC: proc(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint)

#PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC: proc(target: GLenum, attachment: GLenum, pname: GLenum, params: ^GLint)

#PFNGLGENERATEMIPMAPPROC: proc(mode: GLenum)

#PFNGLBLITFRAMEBUFFERPROC: proc(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum)

#PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC: proc(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)

#PFNGLFRAMEBUFFERTEXTURELAYERPROC: proc(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint)

#PFNGLMAPBUFFERRANGEPROC: proc(target: GLenum, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) => ^raw

#PFNGLFLUSHMAPPEDBUFFERRANGEPROC: proc(target: GLenum, offset: GLintptr, length: GLsizeiptr)

#PFNGLBINDVERTEXARRAYPROC: proc(mask: GLuint)

#PFNGLDELETEVERTEXARRAYSPROC: proc(n: GLsizei, textures: ^GLuint)

#PFNGLGENVERTEXARRAYSPROC: proc(n: GLsizei, textures: ^GLuint)

#PFNGLISVERTEXARRAYPROC: proc(texture: GLuint) => GLboolean

#PFNGLDRAWARRAYSINSTANCEDPROC: proc(mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei)

#PFNGLDRAWELEMENTSINSTANCEDPROC: proc(mode: GLenum, count: GLsizei, type: GLenum, indices: ^raw, instancecount: GLsizei)

#PFNGLTEXBUFFERPROC: proc(target: GLenum, internalformat: GLenum, buffer: GLuint)

#PFNGLPRIMITIVERESTARTINDEXPROC: proc(mask: GLuint)

#PFNGLCOPYBUFFERSUBDATAPROC: proc(readTarget: GLenum, writeTarget: GLenum, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr)

#PFNGLGETUNIFORMINDICESPROC: proc(program: GLuint, uniformCount: GLsizei, uniformNames: ^^GLchar, uniformIndices: ^GLuint)

#PFNGLGETACTIVEUNIFORMSIVPROC: proc(program: GLuint, uniformCount: GLsizei, uniformIndices: ^GLuint, pname: GLenum, params: ^GLint)

#PFNGLGETACTIVEUNIFORMNAMEPROC: proc(program: GLuint, uniformIndex: GLuint, bufSize: GLsizei, length: ^GLsizei, uniformName: ^GLchar)

#PFNGLGETUNIFORMBLOCKINDEXPROC: proc(program: GLuint, uniformBlockName: ^GLchar) => GLuint

#PFNGLGETACTIVEUNIFORMBLOCKIVPROC: proc(program: GLuint, uniformBlockIndex: GLuint, pname: GLenum, params: ^GLint)

#PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC: proc(program: GLuint, uniformIndex: GLuint, bufSize: GLsizei, length: ^GLsizei, uniformName: ^GLchar)

#PFNGLUNIFORMBLOCKBINDINGPROC: proc(index: GLuint, x: GLuint, y: GLuint)

#PFNGLDRAWELEMENTSBASEVERTEXPROC: proc(mode: GLenum, count: GLsizei, type: GLenum, indices: ^raw, basevertex: GLint)

#PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC: proc(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: ^raw, basevertex: GLint)

#PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC: proc(mode: GLenum, count: GLsizei, type: GLenum, indices: ^raw, instancecount: GLsizei, basevertex: GLint)

#PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC: proc(mode: GLenum, count: ^GLsizei, type: GLenum, indices: ^^raw, drawcount: GLsizei, basevertex: ^GLint)

#PFNGLPROVOKINGVERTEXPROC: proc(mode: GLenum)

#PFNGLFENCESYNCPROC: proc(condition: GLenum, flags: GLbitfield) => GLsync

#PFNGLISSYNCPROC: proc(sync: GLsync) => GLboolean

#PFNGLDELETESYNCPROC: proc(sync: GLsync)

#PFNGLCLIENTWAITSYNCPROC: proc(sync: GLsync, flags: GLbitfield, timeout: GLuint64) => GLenum

#PFNGLWAITSYNCPROC: proc(sync: GLsync, flags: GLbitfield, timeout: GLuint64)

#PFNGLGETINTEGER64VPROC: proc(pname: GLenum, data: ^GLint64)

#PFNGLGETSYNCIVPROC: proc(sync: GLsync, pname: GLenum, count: GLsizei, length: ^GLsizei, values: ^GLint)

#PFNGLGETINTEGER64I_VPROC: proc(target: GLenum, index: GLuint, data: ^GLint64)

#PFNGLGETBUFFERPARAMETERI64VPROC: proc(target: GLenum, pname: GLenum, params: ^GLint64)

#PFNGLFRAMEBUFFERTEXTUREPROC: proc(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint)

#PFNGLTEXIMAGE2DMULTISAMPLEPROC: proc(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean)

#PFNGLTEXIMAGE3DMULTISAMPLEPROC: proc(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean)

#PFNGLGETMULTISAMPLEFVPROC: proc(pname: GLenum, index: GLuint, val: ^GLfloat)

#PFNGLSAMPLEMASKIPROC: proc(maskNumber: GLuint, mask: GLbitfield)

#PFNGLBINDFRAGDATALOCATIONINDEXEDPROC: proc(program: GLuint, colorNumber: GLuint, index: GLuint, name: ^GLchar)

#PFNGLGETFRAGDATAINDEXPROC: proc(program: GLuint, name: ^GLchar) => GLint

#PFNGLGENSAMPLERSPROC: proc(n: GLsizei, textures: ^GLuint)

#PFNGLDELETESAMPLERSPROC: proc(n: GLsizei, textures: ^GLuint)

#PFNGLISSAMPLERPROC: proc(texture: GLuint) => GLboolean

#PFNGLBINDSAMPLERPROC: proc(program: GLuint, shader: GLuint)

#PFNGLSAMPLERPARAMETERIPROC: proc(sampler: GLuint, pname: GLenum, param: GLint)

#PFNGLSAMPLERPARAMETERIVPROC: proc(sampler: GLuint, pname: GLenum, param: ^GLint)

#PFNGLSAMPLERPARAMETERFPROC: proc(sampler: GLuint, pname: GLenum, param: GLfloat)

#PFNGLSAMPLERPARAMETERFVPROC: proc(sampler: GLuint, pname: GLenum, param: ^GLfloat)

#PFNGLSAMPLERPARAMETERIIVPROC: proc(sampler: GLuint, pname: GLenum, param: ^GLint)

#PFNGLSAMPLERPARAMETERIUIVPROC: proc(sampler: GLuint, pname: GLenum, param: ^GLuint)

#PFNGLGETSAMPLERPARAMETERIVPROC: proc(id: GLuint, pname: GLenum, params: ^GLint)

#PFNGLGETSAMPLERPARAMETERIIVPROC: proc(id: GLuint, pname: GLenum, params: ^GLint)

#PFNGLGETSAMPLERPARAMETERFVPROC: proc(index: GLuint, pname: GLenum, params: ^GLfloat)

#PFNGLGETSAMPLERPARAMETERIUIVPROC: proc(id: GLuint, pname: GLenum, params: ^GLuint)

#PFNGLQUERYCOUNTERPROC: proc(id: GLuint, mode: GLenum)

#PFNGLGETQUERYOBJECTI64VPROC: proc(id: GLuint, pname: GLenum, params: ^GLint64)

#PFNGLGETQUERYOBJECTUI64VPROC: proc(id: GLuint, pname: GLenum, params: ^GLuint64)

#PFNGLVERTEXATTRIBDIVISORPROC: proc(program: GLuint, shader: GLuint)

#PFNGLVERTEXATTRIBP1UIPROC: proc(index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint)

#PFNGLVERTEXATTRIBP1UIVPROC: proc(index: GLuint, type: GLenum, normalized: GLboolean, value: ^GLuint)

#PFNGLVERTEXATTRIBP2UIPROC: proc(index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint)

#PFNGLVERTEXATTRIBP2UIVPROC: proc(index: GLuint, type: GLenum, normalized: GLboolean, value: ^GLuint)

#PFNGLVERTEXATTRIBP3UIPROC: proc(index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint)

#PFNGLVERTEXATTRIBP3UIVPROC: proc(index: GLuint, type: GLenum, normalized: GLboolean, value: ^GLuint)

#PFNGLVERTEXATTRIBP4UIPROC: proc(index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint)

#PFNGLVERTEXATTRIBP4UIVPROC: proc(index: GLuint, type: GLenum, normalized: GLboolean, value: ^GLuint)

#PFNGLVERTEXP2UIPROC: proc(target: GLenum, texture: GLuint)

#PFNGLVERTEXP2UIVPROC: proc(type: GLenum, value: ^GLuint)

#PFNGLVERTEXP3UIPROC: proc(target: GLenum, texture: GLuint)

#PFNGLVERTEXP3UIVPROC: proc(type: GLenum, value: ^GLuint)

#PFNGLVERTEXP4UIPROC: proc(target: GLenum, texture: GLuint)

#PFNGLVERTEXP4UIVPROC: proc(type: GLenum, value: ^GLuint)

#PFNGLTEXCOORDP1UIPROC: proc(target: GLenum, texture: GLuint)

#PFNGLTEXCOORDP1UIVPROC: proc(type: GLenum, value: ^GLuint)

#PFNGLTEXCOORDP2UIPROC: proc(target: GLenum, texture: GLuint)

#PFNGLTEXCOORDP2UIVPROC: proc(type: GLenum, value: ^GLuint)

#PFNGLTEXCOORDP3UIPROC: proc(target: GLenum, texture: GLuint)

#PFNGLTEXCOORDP3UIVPROC: proc(type: GLenum, value: ^GLuint)

#PFNGLTEXCOORDP4UIPROC: proc(target: GLenum, texture: GLuint)

#PFNGLTEXCOORDP4UIVPROC: proc(type: GLenum, value: ^GLuint)

#PFNGLMULTITEXCOORDP1UIPROC: proc(target: GLenum, internalformat: GLenum, buffer: GLuint)

#PFNGLMULTITEXCOORDP1UIVPROC: proc(target: GLenum, pname: GLenum, params: ^GLuint)

#PFNGLMULTITEXCOORDP2UIPROC: proc(target: GLenum, internalformat: GLenum, buffer: GLuint)

#PFNGLMULTITEXCOORDP2UIVPROC: proc(target: GLenum, pname: GLenum, params: ^GLuint)

#PFNGLMULTITEXCOORDP3UIPROC: proc(target: GLenum, internalformat: GLenum, buffer: GLuint)

#PFNGLMULTITEXCOORDP3UIVPROC: proc(target: GLenum, pname: GLenum, params: ^GLuint)

#PFNGLMULTITEXCOORDP4UIPROC: proc(target: GLenum, internalformat: GLenum, buffer: GLuint)

#PFNGLMULTITEXCOORDP4UIVPROC: proc(target: GLenum, pname: GLenum, params: ^GLuint)

#PFNGLNORMALP3UIPROC: proc(target: GLenum, texture: GLuint)

#PFNGLNORMALP3UIVPROC: proc(type: GLenum, value: ^GLuint)

#PFNGLCOLORP3UIPROC: proc(target: GLenum, texture: GLuint)

#PFNGLCOLORP3UIVPROC: proc(type: GLenum, value: ^GLuint)

#PFNGLCOLORP4UIPROC: proc(target: GLenum, texture: GLuint)

#PFNGLCOLORP4UIVPROC: proc(type: GLenum, value: ^GLuint)

#PFNGLSECONDARYCOLORP3UIPROC: proc(target: GLenum, texture: GLuint)

#PFNGLSECONDARYCOLORP3UIVPROC: proc(type: GLenum, value: ^GLuint)

