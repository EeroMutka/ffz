//#B: import("../modules/basic")
//#Arr: import("../modules/Array")


// link crt startup
@link_system_library: "libcmt.lib"
//#test: @extern proc(x: uint)

#foo: proc() => (bool) {
	ret false
}

#bar: proc() => (bool) {
	dbgbreak
	ret true
}

#main: proc() {
	
	//b: 1000
	//c: add_numbers(a, b)
	//second()
	
	if foo() || bar() {
		dbgbreak
	}
	
	
	//for i: 0, i<3, i=.+1 {
	//	result = . * 5
	//	test(result)
	//	//B.f_os_print_color("hoi ", B.fConsoleAttributeFlags(B.fConsoleAttribute.Green))
	//}
	/*
	arena_base: (^u8)(B.TiB(2))
	arena: B.arena_make_virtual_reserve_fixed(B.MiB(2), arena_base)
	
	arr: Arr.make[int](&arena.allocator)
	Arr.push[int](&arr, 3)
	Arr.push[int](&arr, 4)
	Arr.push[int](&arr, 5)
	*/
	//adder[int](1, 2)
	//adder_int(50, 60)
	
}


