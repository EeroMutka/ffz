//#B: import("../modules/basic")
//#Arr: import("../modules/Array")


// link crt startup
@link_system_library: "libcmt.lib"

#foo: proc() => (bool) {
	dbgbreak
	dbgbreak
	ret true
}

#bar: proc() => (bool) {
	dbgbreak
	dbgbreak
	ret true
}

#main: proc() {
	
	if foo() && bar() {
		dbgbreak
	}
	
	dbgbreak
	
	//arena_base: (^u8)(B.TiB(2))
	//arena: B.arena_make_virtual_reserve_fixed(B.MiB(2), arena_base)
	
	//alloc: B.Allocator
	//arr: Arr.make[int](&alloc)
	
	//arr: Arr.make[int](&arena.allocator)
	//Arr.push[int](&arr, 3)
	//Arr.push[int](&arr, 4)
	//Arr.push[int](&arr, 5)
	
	//adder[int](1, 2)
	//adder_int(50, 60)
	
	/*for i: 0, i<64, i=.+1 {
		B.f_os_print_color("hoi ", B.fConsoleAttributeFlags(B.fConsoleAttribute.Green))
	}
	*/
	dbgbreak
}


