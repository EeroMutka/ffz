#Basic: import(":Basic")

//#Vector: poly[TYPE, VALUE] TYPE(VALUE)
//
//#A: Vector[int, 505]
//#B: Vector[u32, 23]

#MyEnum: enum, u32 {
	Thing: 0
	Cat: 1
	Dog: 2
}

//my_global: int(50)

#subber: poly[T] proc(x: T) => bool {
	if x > 0 {
		ret true
	}
	ret false
}

#adder: poly[T] proc(a: T) => T {
	result: subber[T](a)
	if result {
		ret a
	}
	ret 500
}

#entry: proc(argc: u32, argv: ^raw) => u32 {
	dbgbreak
	
	Basic.print("moi moi\n")
	
	foo: MyEnum.Cat
	foo = MyEnum.Dog
	
	//my_global = 30
	
	x: adder[u32](1)
	//y: adder[int](5, 62)
	//z: adder[u32](12, 23)
	
	dbgbreak
	ret 0
}

