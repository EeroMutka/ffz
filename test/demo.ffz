#Basic: import(":Basic")
#str: import(":String")

// TODO:
// temp allocator
// break, continue
// make .slice[] not necessary for Arrays
// bring back TB

// anonymous struct and array literals?
// automatic slicing for array types? i.e. make this possible: []string({"hi", "bye"})

// OpenGL + Win32
// keyboard / mouse input
// Goal #1: Basic 2D drawing library + demo app for it

// Goal #2: 3D chess game with OpenGL with no third-party dependencies, except
// cgltf, miniaudio, stbi, stbtt
// this game should include cool PBR graphics and sounds

// towards a 3D level editor / engine!!

// Example programs ideas:
// Ray tracer demo program
// Game of life
// Chess game, maybe even 3d? That would be pretty cool!
// tetris? breakout? pong? snake?

//#c_things: |extern{"build/c_things.obj"}
//#print_uint: @c_things proc(x: uint)

#entry: proc() {
	Basic.print_string(str.tfrom_uint(1))
	Basic.print_string("\n")
	Basic.print_string(str.tfrom_uint(55))
	Basic.print_string("\n")
	Basic.print_string(str.tfrom_uint(5 + 150))
	Basic.print_string("\n")
	Basic.print_string(str.tfrom_uint(90 * 2))
	Basic.print_string("\n")
	
	dbgbreak
	dbgbreak
	dbgbreak
}
