#B: import(":Basic")
#Array: import(":Array")
#str: import(":String")

// #RL: import(":vendor/raylib")

$link_library{"build/c_things.obj"}
#print_uint: @extern{} proc(x: uint)
#print_string: @extern{} proc(x: string)

// TODO:
// Let's make it possible to convert from int to string!
// break, continue

// Example programs ideas:
// Ray tracer demo program
// Game of life
// Chess game, maybe even 3d? That would be pretty cool!
// tetris? breakout? pong? snake?

#main: proc() {
	
	arena_base: (^u8)(B.TiB(2))
	arena: B.arena_make_virtual_reserve_fixed(B.MiB(2), arena_base)
	temp: &arena.allocator
	
	numbers: Array.make[uint](temp)
	 
	/*
	for i: 0, i < 16, i= .+1 {
		Array.push[uint](&numbers, i + i)
	}
	
	print_string("Printing array:")
	for i: 0, i < numbers.len, i= .+1 {
		print_uint(numbers.slice[i])
	}*/
	
	
	print_string("AAIII")
	
	my_string: str.from_int(5021, temp)
	print_string(my_string)
	
	//print_string("addd")
	
	
	/*window_width: uint(512)
	RL.InitWindow(s32(window_width), s32(window_width), "Hello".ptr)
	
	RL.SetTargetFPS(60)
	
	i: u8(0)
	
	for, !RL.WindowShouldClose() {
		RL.BeginDrawing()
		
		print_string("frame")
		
		RL.ClearBackground(RL.Color{200, 200, i, 255})
		
		i= . + 1
		if i > 250 {
			i = 0
		}
		
		RL.EndDrawing()
	}*/
}
